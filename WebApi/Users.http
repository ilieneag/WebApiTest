### User Management API Testing

@baseUrl = http://localhost:5000/api

### Get all users
GET {{baseUrl}}/users
Accept: application/json

### Get user by ID
GET {{baseUrl}}/users/1
Accept: application/json

### Get non-existent user
GET {{baseUrl}}/users/999
Accept: application/json

### Create a new user
POST {{baseUrl}}/users
Content-Type: application/json

{
  "firstName": "Alice",
  "lastName": "Williams",
  "email": "alice.williams@techhive.com",
  "phoneNumber": "+1-555-0104",
  "department": "Marketing",
  "jobTitle": "Marketing Specialist"
}

### Create user with invalid email
POST {{baseUrl}}/users
Content-Type: application/json

{
  "firstName": "Bob",
  "lastName": "Brown",
  "email": "invalid-email",
  "department": "Sales"
}

### Create user with duplicate email
POST {{baseUrl}}/users
Content-Type: application/json

{
  "firstName": "Charlie",
  "lastName": "Davis",
  "email": "john.doe@techhive.com",
  "department": "Finance"
}

### Update user (partial update)
PUT {{baseUrl}}/users/1
Content-Type: application/json

{
  "department": "Senior IT",
  "jobTitle": "Senior Software Developer"
}

### Update user with invalid ID
PUT {{baseUrl}}/users/999
Content-Type: application/json

{
  "firstName": "Updated Name"
}

### Update user with duplicate email
PUT {{baseUrl}}/users/1
Content-Type: application/json

{
  "email": "jane.smith@techhive.com"
}

### Delete user
DELETE {{baseUrl}}/users/3
Accept: application/json

### Delete non-existent user
DELETE {{baseUrl}}/users/999
Accept: application/json

### Verify user was soft deleted (should return 404)
GET {{baseUrl}}/users/3
Accept: application/json